networks:
  custom:
    ipam:
      config:
        - subnet: 10.5.0.0/16
services:
  postgres:
    image: postgres
    environment:
      - POSTGRES_PASSWORD=postgrespw
    ports:
      - 5432:5432
    volumes:
      - /var/lib/postgresql/data
    networks:
      custom:
  mongodb:
    image: mongo
    environment:
      - MONGO_INITDB_ROOT_USERNAME=mongo
      - MONGO_INITDB_ROOT_PASSWORD=mongopw
    ports:
      - 27017:27017
    volumes:
      - /var/lib/mongodb/data
    networks:
      custom:
  rabbitmq:
    image: rabbitmq:3-management-alpine
    ports:
      - 5672:5672
      - 15672:15672
    networks:
      custom:
  auction-svc:
    image: duynguyenbui/auction-svc:latest
    build:
      context: .
      dockerfile: AuctionService/Dockerfile
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_URLS=http://+:80
      - ASPNETCORE_URLS=http://+:7777
      - RabbitMq__Host=rabbitmq
      - Cloudinary__CloudName=dsceyl414
      - Cloudinary__ApiKey=473543669657924
      - Cloudinary__ApiSecret=1iGe5fE7Q4i_Wn8qKjQ_KSSXSLA
      - ConnectionStrings__DefaultConnection=Server=postgres:5432;User Id=postgres;Password=postgrespw;Database=auction
      - IdentityServiceUrl=http://identity-svc
      - Kestrel__Endpoints__Grpc__Protocols=Http2
      - Kestrel__Endpoints__Grpc__Url=http://+:7777
      - Kestrel__Endpoints__WebApi__Protocols=Http1
      - Kestrel__Endpoints__WebApi__Url=http://+:80
      - OpenAI__ApiKey=not-needed
      - OpenAI__Endpoint=http://host.docker.internal:1234
    ports:
      - 7001:80
      - 7777:7777
    depends_on:
      - postgres
      - rabbitmq
    networks:
      custom:
  search-svc:
    image: duynguyenbui/search-svc:latest
    build:
      context: .
      dockerfile: SearchService/Dockerfile
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_URLS=http://+:80
      - RabbitMq__Host=rabbitmq
      - ConnectionStrings__MongoDbConnection=mongodb://mongo:mongopw@mongodb:27017
      - AuctionServiceUrl=http://auction-svc
    ports:
      - 7002:80
    depends_on:
      - mongodb
      - rabbitmq
    networks:
      custom:
  identity-svc:
    image: duynguyenbui/identity-svc:latest
    build:
      context: .
      dockerfile: IdentityService/Dockerfile
    environment:
      - ASPNETCORE_ENVIRONMENT=Docker
      - ASPNETCORE_URLS=http://+:80
      - ConnectionStrings__DefaultConnection=Server=postgres:5432;User Id=postgres;Password=postgrespw;Database=identity
      - ClientApp=http://app.artelevate.com
      - VIRTUAL_HOST=id.artelevate.com
    depends_on:
      - postgres
    networks:
      custom:
        ipv4_address: 10.5.0.200
  gateway-svc:
    image: duynguyenbui/gateway-svc:latest
    build:
      context: .
      dockerfile: GatewayService/Dockerfile
    environment:
      - ASPNETCORE_ENVIRONMENT=Docker
      - ASPNETCORE_URLS=http://+:80
      - ClientApp=https://app.artelevate.com
      - VIRTUAL_HOST=api.artelevate.com
    networks:
      custom:
  bid-svc:
    image: duynguyenbui/bid-svc:latest
    build:
      context: .
      dockerfile: BiddingService/Dockerfile
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_URLS=http://+:80
      - RabbitMq__Host=rabbitmq
      - ConnectionStrings__BidDbConnection=mongodb://mongo:mongopw@mongodb:27017
      - IdentityServiceUrl=http://identity-svc
      - GrpcAuction=http://auction-svc:7777
    ports:
      - 7003:80
    depends_on:
      - mongodb
      - rabbitmq
    networks:
      custom:
  notify-svc:
    image: duynguyenbui/notify-svc:latest
    build:
      context: .
      dockerfile: NotificationService/Dockerfile
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_URLS=http://+:80
      - RabbitMq__Host=rabbitmq
    ports:
      - 7004:80
    depends_on:
      - rabbitmq
    networks:
      custom:
  web-app:
    image: duynguyenbui/web-app:latest
    build:
      context: .
      dockerfile: art-elevate/Dockerfile
    volumes:
      - /var/lib/web/data
    extra_hosts:
      - id.artelevate.com:10.5.0.200
    environment:
      - API_SERVER_URL=http://gateway-svc
      - IDENTITY_SERVER_URL=http://id.artelevate.com
      - NEXTAUTH_SECRET=somethingreallyreallysecret
      - NEXTAUTH_URL=http://app.artelevate.com
      - NEXTAUTH_URL_INTERNAL=http://web-app:3000
      - NEXT_PUBLIC_NOTIFY_URL=http://gateway-svc/notifications
      - NEXT_PUBLIC_API_SERVER_URL=http://gateway-svc
      - VIRTUAL_HOST=app.artelevate.com
      - VIRTUAL_PORT=3000
    networks:
      custom:
  portainer:
    image: portainer/portainer-ce
    ports:
      - 8000:8000
      - 9000:9000
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
  prometheus:
    image: prom/prometheus:v2.36.2
    volumes:
      - ./prometheus/:/etc/prometheus/
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/usr/share/prometheus/console_libraries'
      - '--web.console.templates=/usr/share/prometheus/consoles'
    ports:
      - 9090:9090
    networks: 
      custom:
  grafana:
    image: grafana/grafana
    user: "472"
    depends_on:
      - prometheus
    volumes:
      - ./grafana/config:/etc/grafana
      - ./grafana/dashboards/:/var/lib/grafana/dashboards     
    ports:
      - 3000:3000
    networks:
      custom:
  nginx-proxy:
    image: nginxproxy/nginx-proxy
    ports:
      - 80:80
      - 443:443
    networks:
      custom:
    volumes:
      - /var/run/docker.sock:/tmp/docker.sock:ro
      - ./devcerts:/etc/nginx/certs